Add Primary Contact Class-

public without sharing class AddPrimaryContact implements Queueable {

    private Contact contact;
    private String state;

    public AddPrimaryContact (Contact inputContact, string inputState) {
        this.contact = inputContact;
        this.state = inputState;
    }
    public void execute(QueueableContext context) {
        List<Account> accounts = [SELECT Id FROM Account WHERE BillingState = :state LIMIT 200];

        List<Contact> contacts = new List<Contact>();

        for(Account acc : accounts) {

            Contact contactClone = contact.clone();
            contactClone.AccountId = acc.Id;
            contacts.add(contactClone);
        }
        insert contacts;
    }

}





Add Primary Contact Test Class-


@isTest
private class AddPrimaryContactTest {

    @isTest
    Private static void testQueueableClass() {

        List<Account> accounts = new List<Account>();
        for(Integer i=0; i<500; i++) {
            Account acc = new Account(Name='Test Account');
            if(i<250) {
                acc.BillingState = 'NY';
            }else {
                acc.BillingState = 'CA';
            }
            accounts.add(acc);
        }
        insert accounts;

        Contact contact = new Contact(FirstName='Simon',LastName='Connok');
        insert contact;

        Test.startTest();
        Id jobId = System.enqueueJob(new AddPrimarycontact(contact,'CA'));
        Test.stopTest();

        List<Contact> contacts = [SELECT Id FROM Contact WHERE Contact.Account.BillingState = 'CA'];
        System.assertEquals(200, contacts.size(), 'ERROR: Incorrect number of Contact records found');
    }

}

